# Web Map Service Layers

## What are Web Map Service (WMS) Layers?

A [Web Mapping Service (WMS)](https://gisgeography.com/web-mapping-services-wms/) consists of geospatial data hosted through the internet with standards set by the Open Geospatial Consortium (OGS).

A WMS enables the exchange of spatial information and viewing over the web in the form of a map or image to your browser. The most common formats of WMS are WMS, WFS, WCS, WPS, WMTS, and WCPS. WMS is the most used. It offers basic panning, zooming and somewhat quick rendering speeds.

## Loading a WMS server

To load a WMS layer into leaflet, we use the `L.tileLayer.wms` class. As simple as that. So let's set up our Leaflet map. Create a new JavaScript file named `wms_layers.js` and insert the following code.

```
let map = L.map('myMap').setView([-1.295287148, 36.81984753], 7);

let tileLayer = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
});

```

We have added an OSM layer because we want to create a layer control widget that also contains WMS layers so that you can switch between both for either spatial awareness or informational purposes (WMS layer). Without further ado, let's add two WMS layers.

```
let wmsLayerTopo = L.tileLayer.wms('https://www.gmrt.org/services/mapserver/wms_merc_mask?', {
    layers: 'topo',
    format: 'image/png'
})

let wmsLayerTopomask = L.tileLayer.wms('https://www.gmrt.org/services/mapserver/wms_merc_mask?', {
    layers: 'topo-mask',
    format: 'image/png'
})

```

## Adding WMS to layer control

Let's insert the above web map layers into a JavaScript object before passing it to a layer control.

```
var basemaps = {
    OSM: tileLayer,
    Topo: wmsLayerTopo,
    Topo_mask: wmsLayerTopomask,
}

```

Now let's parse the object into a control. If you did [Chapter 8][Layer groups and controls] then this should be familiar.

```
L.control.layers(basemaps).addTo(map);

basemaps.Topo.addTo(map);  // To have the Topo as the default map layer

```

The last line `basemaps.Topo.addTo(map)` serves to set up the default layer that will appear when the map is loaded. In this case it is the variable set to `Topo` key in `var basemaps`. If this last line is omitted, the leaflet map will load alright, however, it will be blank canvas unless one of the radioitems is clicked.


```{r}
knitr::include_graphics(rep('D:/gachuhi/my-leaflet/images/wms_layer.jpg'))

```

And that's it!

We wanted to introduce some African-based WMS layers, of which [Digital Earth Africa](https://training.digitalearthafrica.org/en/latest/OWS_tutorial.html) provides a couple, however, these WMS layers could only be loaded in Qgis. Subsequent attempts to load them in Leaflet even after carefully following the official documents yielded no fruits.

Interested in getting other WMS layers? Go to [Spartineo.com](https://directory.spatineo.com/).

The files used in these very short chapter are available [here](https://www.dropbox.com/scl/fo/n6oiyw21axiqxpdcfeqnp/h?dl=0&rlkey=jr8f6g5mx5i83kpjofv56hk5g).












































































